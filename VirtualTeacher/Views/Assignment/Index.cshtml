@{
    ViewData["title"] = "Assignments";
}

@model AssignmentsViewModel

    @* SEARCHBAR *@

<div style="display: flex; justify-content: space-between; align-items: center;">
    <span>
        <form asp-controller="AssignmentController" asp-action="Index" method="Get">
            <div class="input-group mb-3 mt-3 ps-2 pe-2">
                <button class="btn btn-outline-secondary" type="button" id="button-addon1">Go</button>
                <input type="text" class="form-control " name="Title" placeholder="Search by course title" aria-label="search area">
            </div>
        </form>
    </span>
</div>

<div class="d-flex justify-content-between">


    @* LIST OF ASSIGNMENTS *@

    <div style="width: 100%">
        @{
            if (@Model.FilteredCourses != null){
                foreach (var course in @Model.FilteredCourses)
                {

                    <H4 style="color: blue" class="pt-2 pb-2">@course.Title</H4>


                    foreach(var lecture in course.Lectures)
                    {

                        <div class="accordion" id="accordionPanelsStayOpenExample">
                            <div class="accordion-item ">
                                <h2 class="accordion-header position-relative" id="panelsStayOpen-headingOne">
                                        <button class="accordion-button collapsed bg-info bg-gradient" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-@lecture.Id" aria-expanded="false" aria-controls="panelsStayOpen-collapseOne">
                                        <text>@lecture.Title</text>
                                        @{
                                            int pendingSubmissions = lecture.Submissions.Where(s => s.Grade == null).Count();
                                            int gradedSubmissions = lecture.Submissions.Where(s => s.Grade != null).Count();
                                            if (pendingSubmissions > 0)
                                            {
                                                <div class="ms-2" data-toggle="tooltip" data-placement="top" title="Submissions Pending Assessment"> @pendingSubmissions <i class="fa-solid fa-note-sticky" style="color: red"></i></div>
                                            }
                                            if (gradedSubmissions > 0)
                                            {
                                                <div class="ms-2" data-toggle="tooltip" data-placement="top" title="Graded Submissions"> @gradedSubmissions <i class="fa-solid fa-square-check" style="color: green"></i></div>
                                            }
                                            // DELETE UPLOAD ASSIGNMENT BUTTONS
                                            if (lecture.AssignmentLink != "")
                                            {
                                                <div class="end-50px position-absolute"><i class="fa-solid fa-download" data-placement="top" title="Download Assignment File"></i> <i class="fa-solid fa-trash-can" data-placement="top" title="Delete Assignment File"></i> </div>
                                            }
                                            else
                                            {
                                                <div class="end-50px position-absolute"><i class="fa-solid fa-upload" data-placement="top" title="Upload Assignment"></i></div>
                                            }
                                        }
                                        
                                    </button>
                                </h2>
                                @{
                                    foreach (var submission in @lecture.Submissions)
                                    {
                                        <div id="panelsStayOpen-@lecture.Id" class="accordion-collapse collapse" aria-labelledby="panelsStayOpen-headingOne" style="">
                                            <div class="accordion-body">

                                                @{
                                                    User student = @course.EnrolledStudents.FirstOrDefault(student => student.Id == submission.StudentId);
                                                    if (student != null)
                                                    {
                                                        string fullName = $"{student.FirstName} {student.LastName}";

                                                        <div>Submited by: @fullName</div>
                                                        if (submission.Grade != null)
                                                        {
                                                            <div><i class="fa-solid fa-square-check" style="color: green"></i> Grade: @submission.Grade</div>
                                                        }
                                                        else
                                                        {
                                                            <div><i class="fa-solid fa-note-sticky" style="color: red"></i> Pending assessment </div>
                                                        }
                                                    }
                                                }

                                            </div>
                                        </div>

                                    }
                                }

                            </div>
                        </div>
                    }
                }
            }
        }
    </div>



    @* FILTERS *@

@*     <div style="width: 29%">
        <div class="card border-light mb-3">
            <form asp-controller="Students" asp-action="Index" method="Get" id="filterForm">
                <div class="card-header bg-info bg-gradient">Filters:</div>
                    <div class="card-body">
                        <div class="list-group list-group-flush">

                        <div class="list-group-item"><strong>Assignments:</strong> </div>
                        @{

                        }
                        <div class="list-group-item"><strong>Courses:</strong> </div>
                        @{
                            foreach (var course in Model.FilteredCourses)
                            {
                                <div class="list-group-item ps-4">
                                    <input type="radio" class="deselectable" id="@("checkbox_" + course)" name="CourseTitle" value=@course>
                                    @course.Title
                                </div>
                            }
                        }
                    </div>
                </div>
            </form>
        </div>
    </div> *@
</div>




<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get all radio buttons with the class "deselectable"
        var radioButtons = document.querySelectorAll('.deselectable');

        // Add click event listener to each radio button
        radioButtons.forEach(function (radioButton) {
            var wasChecked = radioButton.checked; // Track previous checked state
            radioButton.addEventListener('click', function () {
                // If the radio button was previously checked, deselect it
                if (wasChecked) {
                    this.checked = false;
                }
                wasChecked = !wasChecked; // Update previous checked state
            });
        });
    });
</script>