@{
    ViewData["Title"] = "Courses";
    string byTitle = "title";
    string byRating = "rating";
}

@model CoursesListViewModel

@* SEARCHBAR AND BUTTONS ON TOP *@
<div style="display: flex; justify-content: space-between; align-items: center;">
    <span>
        <form asp-controller="Course" asp-action="Index" method="Get">
            <div class="input-group mb-3 mt-3 ps-2 pe-2">
                <button class="btn btn-outline-secondary" type="button" id="button-addon1">Go</button>
                <input type="text" class="form-control " name="Title" placeholder="Search by course title" aria-label="search area">
            </div>
        </form>
    </span>

    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            Sort By
        </button>
        <ul class="dropdown-menu">
            <li><a asp-controller="Course" asp-action="Index" asp-route-SortBy="title" class="dropdown-item">Title</a></li>
            <li><a asp-controller="Course" asp-action="Index" asp-route-SortBy="rating" class="dropdown-item">Rating</a></li>
        </ul>
    </div>

    <span style="flex: 1;" class="ms-1 me-1">
        @if (User.Identity is { IsAuthenticated: true } && User.IsInRole("Admin") || User.IsInRole("Teacher"))
        {
            <a asp-controller="Course" asp-action="Create" class="btn btn-success">Create a new course</a>
        }
    </span>

</div>

@* COURSES LIST *@

@{
    string prevState = (Model.Courses.HasPreviousPage) ? "" : "disabled";
    string nextState = (Model.Courses.HasNextPage) ? "" : "disabled";
    int prevPage = Model.Courses.PageNumber - 1;
    int nextPage = Model.Courses.PageNumber + 1;
}

<div class="d-flex justify-content-between">
    <div style="width: 65%">
        @{
            if (Model.Courses != null)
            {
                foreach (var course in Model.Courses)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <a asp-controller="Course" asp-action="Details" asp-route-id="@course.Id">@course.Title</a>
                            Teacher: @course.ActiveTeachers[0].Username
                            @{
                                double rating = (course.Ratings.Any() ? course.Ratings.Average(r => r.Value) : 0.0);
                                int roundedRating = Convert.ToInt32(Math.Ceiling(rating));
                            }
                            Rating: @rating
                            @await Html.PartialAsync("_DisplayRating", roundedRating)
                            Students: @course.EnrolledStudents.Count()
                        </div>
                    </div>
                }
            } else
            {
                <H1>There are no courses at the moment :3</H1>
            }
        }
      @* PAGE BUTTONS *@

    <div class="d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul class="pagination">

@*                 <li class="page-item @prevState">
                    <a class="page-link" asp-controller="Course" asp-action="Index" asp-route-PageNumber="@prevPage" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>

                </li> *@
                    <li class="page-item @prevState">
                        <form asp-controller="Course" asp-action="Index" method="get">
                            <input type="hidden" name="PageNumber" value="@prevPage" />
                            <input type="hidden" name="Topic" value="@Model.Parameters.Topic" />
                            <input type="hidden" name="TeacherUsername" value="@Model.Parameters.TeacherUsername" />
                            <input type="hidden" name="SortBy" value="@Model.Parameters.SortBy" />

                            <button type="submit" class="page-link @prevState" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </button>
                        </form>
                    </li>


                @{
                    for (int i = 1; i <= Model.Courses.TotalPages; i++)
                    {
                        if (i == Model.Courses.PageNumber)
                        {
                            <li class="page-item">
                                <a class="page-link active" aria-current="page">@i</a>
                            </li>
                        }
                        else
                        {
                            // <li class="page-item">
                            //     <a class="page-link" href="@Url.Action("Index", "Course", new { PageNumber = i, SortBy = Model.Parameters.SortBy })">@i</a>
                            // </li>

                                <li class="page-item">
                                    <form asp-controller="Course" asp-action="Index" method="get">
                                        <input type="hidden" name="PageNumber" value="@i" />
                                        <input type="hidden" name="Topic" value="@Model.Parameters.Topic" />
                                        <input type="hidden" name="TeacherUsername" value="@Model.Parameters.TeacherUsername" />
                                        <input type="hidden" name="SortBy" value="@Model.Parameters.SortBy" />

                                        <button type="submit" class="page-link">@i</button>
                                    </form>
                                </li>
                        }
                    }
                }

                    <li class="page-item @nextState">
                        <form asp-controller="Course" asp-action="Index" method="get">
                            <input type="hidden" name="PageNumber" value="@nextPage" />
                            <input type="hidden" name="Topic" value="@Model.Parameters.Topic" />
                            <input type="hidden" name="TeacherUsername" value="@Model.Parameters.TeacherUsername" />
                            <input type="hidden" name="SortBy" value="@Model.Parameters.SortBy" />

                            <button type="submit" class="page-link @nextState aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </button>
                        </form>
                    </li>

            </ul>
        </nav>

    </div>


    </div>



    @* FILTERS *@

    <div style="width: 34%">

        <div class="card border-light mb-3">
            <form asp-controller="Course" asp-action="Index" method="Get" id="filterForm">
                <div class="card-header">Filters:</div>
                <div class="card-body">

                    <div class="list-group list-group-flush">

                        <div class="list-group-item"><strong>Topics:</strong> </div>
                        @{
                            if (@Model.AllTopics != null)
                            {
                                foreach (var topic in @Model.AllTopics)
                                {
                                    <div class="list-group-item ps-4">
                                        <input type="radio" class="deselectable" id="@("checkbox_" + topic)" name="Topic" value=@topic @(Model.Parameters.Topic.ToString() == topic ? "checked" : "")>
                                        @topic
                                    </div>
                                }
                            }
                        }
                        <div class="list-group-item"><strong>Teachers: </strong></div>
                        @{
                            if (@Model.AllTeachers != null)
                            {
                                foreach (var username in @Model.AllTeachers)
                                {
                                    <div class="list-group-item ps-4">
                                        <input type="radio" class="deselectable" id="@("checkbox_" + username)" name="TeacherUsername" value="@username" @(Model.Parameters.TeacherUsername == username ? "checked" : "")>
                                        @username
                                    </div>
                                }
                            }
                        }
                        <div class="list-group-item " >
                            <div style="display: block;" class="mb-4 mt-2">
                                <strong margin-bottom: 10px;>Min Rating:</strong>


                                <div class="rating-group " id="font-size-popup">

                                    <label aria-label="1 star" class="rating__label" for="rating2-10"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                        <input class="rating__input" name="MinRating" id="rating2-10" value="1" type="radio" @(Model.Parameters.MinRating == 1 ? "checked" : "")>

                                    <label aria-label="2 stars" class="rating__label" for="rating2-20"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                        <input class="rating__input" name="MinRating" id="rating2-20" value="2" type="radio" @(Model.Parameters.MinRating == 2 ? "checked" : "")>

                                    <label aria-label="3 stars" class="rating__label" for="rating2-30"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                        <input class="rating__input" name="MinRating" id="rating2-30" value="3" type="radio" @(Model.Parameters.MinRating == 3 ? "checked" : "")>

                                    <label aria-label="4 stars" class="rating__label" for="rating2-40"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                        <input class="rating__input" name="MinRating" id="rating2-40" value="4" type="radio" @(Model.Parameters.MinRating == 4 ? "checked" : "")>

                                    <label aria-label="5 stars" class="rating__label" for="rating2-50"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                        <input class="rating__input" name="MinRating" id="rating2-50" value="5" type="radio" @(Model.Parameters.MinRating == 5 ? "checked" : "")>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <input type="hidden" name="" value="" class="form-input" />
                                <div class="left-side-container">
                                    <button type="button" class="btn btn-outline-secondary" onclick="resetFilters()">Reset</button>
                                </div>

                                <button type="submit" class="btn btn-outline-secondary">Go</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>



<script>
    function resetFilters() {
        var radioButtons = document.querySelectorAll('input[type="radio"]');
        radioButtons.forEach(function (radio) {
            radio.checked = false;
        });
    }
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get all radio buttons with the class "deselectable"
        var radioButtons = document.querySelectorAll('.deselectable');

        // Add click event listener to each radio button
        radioButtons.forEach(function (radioButton) {
            var wasChecked = radioButton.checked; // Track previous checked state
            radioButton.addEventListener('click', function () {
                // If the radio button was previously checked, deselect it
                if (wasChecked) {
                    this.checked = false;
                }
                wasChecked = !wasChecked; // Update previous checked state
            });
        });
    });
</script>