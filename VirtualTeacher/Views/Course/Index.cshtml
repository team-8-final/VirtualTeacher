@{
    ViewData["Title"] = "Courses";
}

@model CoursesListViewModel

@* SEARCHBAR AND FILTER *@

@if (User.Identity is { IsAuthenticated: true } && User.IsInRole("Admin") || User.IsInRole("Teacher"))
{
    <a asp-controller="Course" asp-action="Create" class="btn btn-success btn-sm" style="margin: 5px;">Create a new course</a>
}

<div class="d-flex justify-content-between">
    <div style="width: 65%">
        @{
            if (Model.Courses != null)
            {
                foreach (var course in Model.Courses)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <a asp-controller="Course" asp-action="Details" asp-route-id="@course.Id">@course.Title</a>
                            Teacher: @course.ActiveTeachers[0].Username 
                            @{
                                double rating = (course.Ratings.Any() ? course.Ratings.Average(r => r.Value) : 0.0);
                                int roundedRating = Convert.ToInt32(Math.Ceiling(rating));
                            }
                            Rating: @rating
                        @await Html.PartialAsync("_DisplayRating", roundedRating)
                        Students: @course.EnrolledStudents.Count()
                    </div>
                </div>
                }
            } else
            {
                <H1>There are no courses at the moment :3</H1>
            }
        }
    </div>

    <div style="width: 34%">

        <div class="card border-light mb-3">
            <form asp-controller="Course" asp-action="Index" method="Get">
                <div class="card-header">Filters:</div>
                <div class="card-body">

                    <div class="list-group list-group-flush">

                        <div class="list-group-item"><strong>Topics:</strong> </div>
                        @{
                            if (@Model.AllCourses != null)
                            {
                                var topics = @Model.AllCourses.Select(course => course.CourseTopic).Distinct().ToList();
                                foreach (var topic in topics)
                                {
                                    <div class="list-group-item ps-4">
                                        <input type="radio" id="@("checkbox_" + topic)" name="Topic" value="@topic">
                                        @topic
                                    </div>
                                }
                            }
                        }
                        <div class="list-group-item"><strong>Teachers: </strong></div>
                        @{
                            var teacherUsernames = @Model.AllCourses
                                .SelectMany(course => course.ActiveTeachers.Select(teacher => teacher.Username)
                                .Distinct()
                                .ToList())
                                .Distinct();
                            foreach (var username in teacherUsernames)
                            {
                                <div class="list-group-item ps-4">
                                    <input type="radio" id="@("checkbox_" + username)" name="TeacherUsername" value="@username">
                                    @username
                                </div>
                            }
                        }
                        <div class="list-group-item " >
                            <div style="display: block; margin-bottom: 10px;">
                            <strong margin-bottom: 10px;>Min Rating:</strong>

                     
                            <div class="rating-group " id="font-size-popup">

                                <label aria-label="1 star" class="rating__label" for="rating2-10"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                    <input class="rating__input" name="MinRating" id="rating2-10" value="1" type="radio">

                                <label aria-label="2 stars" class="rating__label" for="rating2-20"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                    <input class="rating__input" name="MinRating" id="rating2-20" value="2" type="radio">

                                <label aria-label="3 stars" class="rating__label" for="rating2-30"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                    <input class="rating__input" name="MinRating" id="rating2-30" value="3" type="radio">

                                <label aria-label="4 stars" class="rating__label" for="rating2-40"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                    <input class="rating__input" name="MinRating" id="rating2-40" value="4" type="radio">

                                <label aria-label="5 stars" class="rating__label" for="rating2-50"><i class="rating__icon rating__icon--star fa fa-star"></i></label>
                                <input class="rating__input" name="MinRating" id="rating2-50" value="5" type="radio">
                            </div>
                            </div>
                            
                            <div class="modal-footer">
                                <input type="hidden" name="" value="" class="form-input" />
                                <div class="left-side-container">
                                    <button type="button" class="btn btn-outline-secondary" onclick="resetFilters()">Reset</button>
                                </div>

                                <button type="submit" class="btn btn-outline-secondary">Go</button>
                            </div>
                           
                    </div>
                    </div>
                </div>

                <div class="card-header">Search By Course Name:</div>

                <div class="input-group mb-3 mt-3 ps-2 pe-2">
                   
                    <button class="btn btn-outline-secondary" type="button" id="button-addon1">Go</button>
                    <input type="text" class="form-control" placeholder="" aria-label="Example text with button addon" aria-describedby="button-addon1">
                </div>
            </form>
        </div>


    </div>
</div>



<script>
    function resetFilters() {
        var radioButtons = document.querySelectorAll('input[type="radio"]');
        radioButtons.forEach(function (radio) {
            radio.checked = false;
        });
    }
</script>